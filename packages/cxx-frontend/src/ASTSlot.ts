// Generated file by: gen_ast_slot_ts.ts
// Copyright (c) 2025 Roberto Raggi <roberto.raggi@gmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

export enum ASTSlot {
  accessLoc = 0,
  accessOp = 1,
  accessSpecifier = 2,
  alignasLoc = 3,
  alignofLoc = 4,
  ampAmpLoc = 5,
  ampLoc = 6,
  arrowLoc = 7,
  asmLoc = 8,
  asmQualifierList = 9,
  atomicLoc = 10,
  attributeArgumentClause = 11,
  attributeList = 12,
  attributeLoc = 13,
  attributeNamespace = 14,
  attributeNamespaceLoc = 15,
  attributeToken = 16,
  attributeUsingPrefix = 17,
  autoLoc = 18,
  awaitLoc = 19,
  baseExpression = 20,
  baseSpecifierList = 21,
  bindingList = 22,
  bracedInitList = 23,
  breakLoc = 24,
  builtinLoc = 25,
  captureDefault = 26,
  captureDefaultLoc = 27,
  captureList = 28,
  caretCaretLoc = 29,
  caseLoc = 30,
  castLoc = 31,
  catchLoc = 32,
  classKey = 33,
  classKeyLoc = 34,
  classLoc = 35,
  clobberList = 36,
  closeLoc = 37,
  colonLoc = 38,
  commaLoc = 39,
  complexLoc = 40,
  conceptLoc = 41,
  condition = 42,
  constLoc = 43,
  constevalLoc = 44,
  constexprLoc = 45,
  constinitLoc = 46,
  constraintLiteral = 47,
  constraintLiteralLoc = 48,
  constvalLoc = 49,
  continueLoc = 50,
  coreDeclarator = 51,
  coreturnLoc = 52,
  cvQualifierList = 53,
  declSpecifierList = 54,
  declaration = 55,
  declarationList = 56,
  declarator = 57,
  declaratorChunkList = 58,
  decltypeLoc = 59,
  decltypeSpecifier = 60,
  defaultLoc = 61,
  deleteLoc = 62,
  depth = 63,
  designatorList = 64,
  doLoc = 65,
  dotLoc = 66,
  ellipsisLoc = 67,
  elseLoc = 68,
  elseStatement = 69,
  emicolonLoc = 70,
  enumLoc = 71,
  enumTypeSpecifier = 72,
  enumeratorList = 73,
  equalLoc = 74,
  exceptionDeclaration = 75,
  exceptionSpecifier = 76,
  exclaimLoc = 77,
  explicitLoc = 78,
  explicitSpecifier = 79,
  exportLoc = 80,
  expression = 81,
  expressionList = 82,
  externLoc = 83,
  extraAttributeList = 84,
  finalLoc = 85,
  foldOp = 86,
  foldOpLoc = 87,
  forLoc = 88,
  friendLoc = 89,
  functionBody = 90,
  genericAssociationList = 91,
  genericLoc = 92,
  globalModuleFragment = 93,
  gnuAtributeList = 94,
  gnuAttributeList = 95,
  gotoLabelList = 96,
  gotoLoc = 97,
  greaterLoc = 98,
  handlerList = 99,
  headerLoc = 100,
  id = 101,
  idExpression = 102,
  identifier = 103,
  identifierLoc = 104,
  ifLoc = 105,
  iffalseExpression = 106,
  iftrueExpression = 107,
  importLoc = 108,
  importName = 109,
  indexExpression = 110,
  initDeclaratorList = 111,
  initializer = 112,
  inlineLoc = 113,
  inputOperandList = 114,
  isFinal = 115,
  isIndirect = 116,
  isInline = 117,
  isNot = 118,
  isOverride = 119,
  isPack = 120,
  isPure = 121,
  isTemplateIntroduced = 122,
  isThisIntroduced = 123,
  isTrue = 124,
  isVariadic = 125,
  isVirtual = 126,
  lambdaSpecifierList = 127,
  lbraceLoc = 128,
  lbracket2Loc = 129,
  lbracketLoc = 130,
  leftExpression = 131,
  leftTypeId = 132,
  lessLoc = 133,
  literal = 134,
  literalLoc = 135,
  literalOperatorId = 136,
  lparen2Loc = 137,
  lparenLoc = 138,
  matchedAssocIndex = 139,
  memInitializerList = 140,
  minusGreaterLoc = 141,
  moduleDeclaration = 142,
  moduleLoc = 143,
  moduleName = 144,
  modulePartition = 145,
  moduleQualifier = 146,
  mutableLoc = 147,
  namespaceLoc = 148,
  nestedNameSpecifier = 149,
  nestedNamespaceSpecifierList = 150,
  newInitalizer = 151,
  newLoc = 152,
  newPlacement = 153,
  noexceptLoc = 154,
  noreturnLoc = 155,
  offsetofLoc = 156,
  op = 157,
  opLoc = 158,
  openLoc = 159,
  operatorFunctionId = 160,
  operatorLoc = 161,
  otherVirtualOrAccessLoc = 162,
  outputOperandList = 163,
  parameterDeclarationClause = 164,
  parameterDeclarationList = 165,
  privateLoc = 166,
  privateModuleFragment = 167,
  ptrOpList = 168,
  qualifier = 169,
  qualifierLoc = 170,
  questionLoc = 171,
  rangeDeclaration = 172,
  rangeInitializer = 173,
  rbraceLoc = 174,
  rbracket2Loc = 175,
  rbracketLoc = 176,
  refLoc = 177,
  refOp = 178,
  refQualifierLoc = 179,
  registerLoc = 180,
  requirementList = 181,
  requiresClause = 182,
  requiresLoc = 183,
  restrictLoc = 184,
  returnLoc = 185,
  rightExpression = 186,
  rightTypeId = 187,
  rparen2Loc = 188,
  rparenLoc = 189,
  scopeLoc = 190,
  secondColonLoc = 191,
  semicolonLoc = 192,
  sizeExpression = 193,
  sizeofLoc = 194,
  specifier = 195,
  specifierLoc = 196,
  splicer = 197,
  starLoc = 198,
  statement = 199,
  statementList = 200,
  staticAssertLoc = 201,
  staticLoc = 202,
  stringLiteral = 203,
  stringliteralLoc = 204,
  switchLoc = 205,
  symbolicName = 206,
  symbolicNameLoc = 207,
  templateArgumentList = 208,
  templateId = 209,
  templateLoc = 210,
  templateParameterList = 211,
  templateRequiresClause = 212,
  thisLoc = 213,
  threadLoc = 214,
  threadLocalLoc = 215,
  throwLoc = 216,
  tildeLoc = 217,
  trailingReturnType = 218,
  tryLoc = 219,
  typeConstraint = 220,
  typeId = 221,
  typeIdList = 222,
  typeQualifierList = 223,
  typeSpecifier = 224,
  typeSpecifierList = 225,
  typeTraitLoc = 226,
  typedefLoc = 227,
  typeidLoc = 228,
  typenameLoc = 229,
  underlyingTypeLoc = 230,
  unqualifiedId = 231,
  usingDeclaratorList = 232,
  usingLoc = 233,
  vaArgLoc = 234,
  virtualLoc = 235,
  virtualOrAccessLoc = 236,
  voidLoc = 237,
  volatileLoc = 238,
  whileLoc = 239,
  yieldLoc = 240,
}
