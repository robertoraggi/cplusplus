// Generated file by: gen_ast_slot_ts.ts
// Copyright (c) 2025 Roberto Raggi <roberto.raggi@gmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

export enum ASTSlot {
  accessLoc = 0,
  accessOp = 1,
  accessSpecifier = 2,
  alignasLoc = 3,
  alignofLoc = 4,
  ampAmpLoc = 5,
  ampLoc = 6,
  arrowLoc = 7,
  asmLoc = 8,
  asmQualifierList = 9,
  atomicLoc = 10,
  attributeArgumentClause = 11,
  attributeList = 12,
  attributeLoc = 13,
  attributeNamespace = 14,
  attributeNamespaceLoc = 15,
  attributeToken = 16,
  attributeUsingPrefix = 17,
  autoLoc = 18,
  awaitLoc = 19,
  baseExpression = 20,
  baseSpecifierList = 21,
  bindingList = 22,
  bracedInitList = 23,
  breakLoc = 24,
  captureDefault = 25,
  captureDefaultLoc = 26,
  captureList = 27,
  caretLoc = 28,
  caseLoc = 29,
  castLoc = 30,
  catchLoc = 31,
  classKey = 32,
  classKeyLoc = 33,
  classLoc = 34,
  clobberList = 35,
  closeLoc = 36,
  colonLoc = 37,
  commaLoc = 38,
  complexLoc = 39,
  conceptLoc = 40,
  condition = 41,
  constLoc = 42,
  constevalLoc = 43,
  constexprLoc = 44,
  constinitLoc = 45,
  constraintLiteral = 46,
  constraintLiteralLoc = 47,
  constvalLoc = 48,
  continueLoc = 49,
  coreDeclarator = 50,
  coreturnLoc = 51,
  cvQualifierList = 52,
  declSpecifierList = 53,
  declaration = 54,
  declarationList = 55,
  declarator = 56,
  declaratorChunkList = 57,
  decltypeLoc = 58,
  decltypeSpecifier = 59,
  defaultLoc = 60,
  deleteLoc = 61,
  designatorList = 62,
  doLoc = 63,
  dotLoc = 64,
  ellipsisLoc = 65,
  elseLoc = 66,
  elseStatement = 67,
  emicolonLoc = 68,
  enumLoc = 69,
  enumTypeSpecifier = 70,
  enumeratorList = 71,
  equalLoc = 72,
  exceptionDeclaration = 73,
  exceptionSpecifier = 74,
  exclaimLoc = 75,
  explicitLoc = 76,
  explicitSpecifier = 77,
  exportLoc = 78,
  expression = 79,
  expressionList = 80,
  externLoc = 81,
  extraAttributeList = 82,
  finalLoc = 83,
  foldOp = 84,
  foldOpLoc = 85,
  forLoc = 86,
  friendLoc = 87,
  functionBody = 88,
  genericAssociationList = 89,
  genericLoc = 90,
  globalModuleFragment = 91,
  gnuAtributeList = 92,
  gnuAttributeList = 93,
  gotoLabelList = 94,
  gotoLoc = 95,
  greaterLoc = 96,
  handlerList = 97,
  headerLoc = 98,
  id = 99,
  idExpression = 100,
  identifier = 101,
  identifierLoc = 102,
  ifLoc = 103,
  iffalseExpression = 104,
  iftrueExpression = 105,
  importLoc = 106,
  importName = 107,
  indexExpression = 108,
  initDeclaratorList = 109,
  initializer = 110,
  inlineLoc = 111,
  inputOperandList = 112,
  isFinal = 113,
  isIndirect = 114,
  isInline = 115,
  isNot = 116,
  isOverride = 117,
  isPack = 118,
  isPure = 119,
  isTemplateIntroduced = 120,
  isThisIntroduced = 121,
  isTrue = 122,
  isVariadic = 123,
  isVirtual = 124,
  lambdaSpecifierList = 125,
  lbraceLoc = 126,
  lbracket2Loc = 127,
  lbracketLoc = 128,
  leftExpression = 129,
  lessLoc = 130,
  literal = 131,
  literalLoc = 132,
  literalOperatorId = 133,
  lparen2Loc = 134,
  lparenLoc = 135,
  matchedAssocIndex = 136,
  memInitializerList = 137,
  minusGreaterLoc = 138,
  moduleDeclaration = 139,
  moduleLoc = 140,
  moduleName = 141,
  modulePartition = 142,
  moduleQualifier = 143,
  mutableLoc = 144,
  namespaceLoc = 145,
  nestedNameSpecifier = 146,
  nestedNamespaceSpecifierList = 147,
  newInitalizer = 148,
  newLoc = 149,
  newPlacement = 150,
  noexceptLoc = 151,
  noreturnLoc = 152,
  offsetofLoc = 153,
  op = 154,
  opLoc = 155,
  openLoc = 156,
  operatorFunctionId = 157,
  operatorLoc = 158,
  otherVirtualOrAccessLoc = 159,
  outputOperandList = 160,
  parameterDeclarationClause = 161,
  parameterDeclarationList = 162,
  privateLoc = 163,
  privateModuleFragment = 164,
  ptrOpList = 165,
  qualifier = 166,
  qualifierLoc = 167,
  questionLoc = 168,
  rangeDeclaration = 169,
  rangeInitializer = 170,
  rbraceLoc = 171,
  rbracket2Loc = 172,
  rbracketLoc = 173,
  refLoc = 174,
  refOp = 175,
  refQualifierLoc = 176,
  registerLoc = 177,
  requirementList = 178,
  requiresClause = 179,
  requiresLoc = 180,
  restrictLoc = 181,
  returnLoc = 182,
  rightExpression = 183,
  rparen2Loc = 184,
  rparenLoc = 185,
  scopeLoc = 186,
  secondColonLoc = 187,
  semicolonLoc = 188,
  sizeExpression = 189,
  sizeofLoc = 190,
  specifier = 191,
  specifierLoc = 192,
  splicer = 193,
  starLoc = 194,
  statement = 195,
  statementList = 196,
  staticAssertLoc = 197,
  staticLoc = 198,
  stringLiteral = 199,
  stringliteralLoc = 200,
  switchLoc = 201,
  symbolicName = 202,
  symbolicNameLoc = 203,
  templateArgumentList = 204,
  templateId = 205,
  templateLoc = 206,
  templateParameterList = 207,
  templateRequiresClause = 208,
  thisLoc = 209,
  threadLoc = 210,
  threadLocalLoc = 211,
  throwLoc = 212,
  tildeLoc = 213,
  trailingReturnType = 214,
  tryLoc = 215,
  typeConstraint = 216,
  typeId = 217,
  typeIdList = 218,
  typeLoc = 219,
  typeQualifierList = 220,
  typeSpecifier = 221,
  typeSpecifierList = 222,
  typeTraitLoc = 223,
  typedefLoc = 224,
  typeidLoc = 225,
  typenameLoc = 226,
  underlyingTypeLoc = 227,
  unqualifiedId = 228,
  usingDeclaratorList = 229,
  usingLoc = 230,
  vaArgLoc = 231,
  virtualLoc = 232,
  virtualOrAccessLoc = 233,
  voidLoc = 234,
  volatileLoc = 235,
  whileLoc = 236,
  yieldLoc = 237,
}
