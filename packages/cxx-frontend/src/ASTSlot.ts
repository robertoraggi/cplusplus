// Generated file by: gen_ast_slot_ts.ts
// Copyright (c) 2025 Roberto Raggi <roberto.raggi@gmail.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

export enum ASTSlot {
  accessLoc = 0,
  accessOp = 1,
  accessSpecifier = 2,
  alignasLoc = 3,
  alignofLoc = 4,
  ampAmpLoc = 5,
  ampLoc = 6,
  arrowLoc = 7,
  asmLoc = 8,
  asmQualifierList = 9,
  atomicLoc = 10,
  attributeArgumentClause = 11,
  attributeList = 12,
  attributeLoc = 13,
  attributeNamespace = 14,
  attributeNamespaceLoc = 15,
  attributeToken = 16,
  attributeUsingPrefix = 17,
  autoLoc = 18,
  awaitLoc = 19,
  baseExpression = 20,
  baseSpecifierList = 21,
  bindingList = 22,
  bracedInitList = 23,
  breakLoc = 24,
  captureDefault = 25,
  captureDefaultLoc = 26,
  captureList = 27,
  caretCaretLoc = 28,
  caseLoc = 29,
  castLoc = 30,
  catchLoc = 31,
  classKey = 32,
  classKeyLoc = 33,
  classLoc = 34,
  clobberList = 35,
  closeLoc = 36,
  colonLoc = 37,
  commaLoc = 38,
  complexLoc = 39,
  conceptLoc = 40,
  condition = 41,
  constLoc = 42,
  constevalLoc = 43,
  constexprLoc = 44,
  constinitLoc = 45,
  constraintLiteral = 46,
  constraintLiteralLoc = 47,
  constvalLoc = 48,
  continueLoc = 49,
  coreDeclarator = 50,
  coreturnLoc = 51,
  cvQualifierList = 52,
  declSpecifierList = 53,
  declaration = 54,
  declarationList = 55,
  declarator = 56,
  declaratorChunkList = 57,
  decltypeLoc = 58,
  decltypeSpecifier = 59,
  defaultLoc = 60,
  deleteLoc = 61,
  depth = 62,
  designatorList = 63,
  doLoc = 64,
  dotLoc = 65,
  ellipsisLoc = 66,
  elseLoc = 67,
  elseStatement = 68,
  emicolonLoc = 69,
  enumLoc = 70,
  enumTypeSpecifier = 71,
  enumeratorList = 72,
  equalLoc = 73,
  exceptionDeclaration = 74,
  exceptionSpecifier = 75,
  exclaimLoc = 76,
  explicitLoc = 77,
  explicitSpecifier = 78,
  exportLoc = 79,
  expression = 80,
  expressionList = 81,
  externLoc = 82,
  extraAttributeList = 83,
  finalLoc = 84,
  foldOp = 85,
  foldOpLoc = 86,
  forLoc = 87,
  friendLoc = 88,
  functionBody = 89,
  genericAssociationList = 90,
  genericLoc = 91,
  globalModuleFragment = 92,
  gnuAtributeList = 93,
  gnuAttributeList = 94,
  gotoLabelList = 95,
  gotoLoc = 96,
  greaterLoc = 97,
  handlerList = 98,
  headerLoc = 99,
  id = 100,
  idExpression = 101,
  identifier = 102,
  identifierLoc = 103,
  ifLoc = 104,
  iffalseExpression = 105,
  iftrueExpression = 106,
  importLoc = 107,
  importName = 108,
  indexExpression = 109,
  initDeclaratorList = 110,
  initializer = 111,
  inlineLoc = 112,
  inputOperandList = 113,
  isFinal = 114,
  isIndirect = 115,
  isInline = 116,
  isNot = 117,
  isOverride = 118,
  isPack = 119,
  isPure = 120,
  isTemplateIntroduced = 121,
  isThisIntroduced = 122,
  isTrue = 123,
  isVariadic = 124,
  isVirtual = 125,
  lambdaSpecifierList = 126,
  lbraceLoc = 127,
  lbracket2Loc = 128,
  lbracketLoc = 129,
  leftExpression = 130,
  lessLoc = 131,
  literal = 132,
  literalLoc = 133,
  literalOperatorId = 134,
  lparen2Loc = 135,
  lparenLoc = 136,
  matchedAssocIndex = 137,
  memInitializerList = 138,
  minusGreaterLoc = 139,
  moduleDeclaration = 140,
  moduleLoc = 141,
  moduleName = 142,
  modulePartition = 143,
  moduleQualifier = 144,
  mutableLoc = 145,
  namespaceLoc = 146,
  nestedNameSpecifier = 147,
  nestedNamespaceSpecifierList = 148,
  newInitalizer = 149,
  newLoc = 150,
  newPlacement = 151,
  noexceptLoc = 152,
  noreturnLoc = 153,
  offsetofLoc = 154,
  op = 155,
  opLoc = 156,
  openLoc = 157,
  operatorFunctionId = 158,
  operatorLoc = 159,
  otherVirtualOrAccessLoc = 160,
  outputOperandList = 161,
  parameterDeclarationClause = 162,
  parameterDeclarationList = 163,
  privateLoc = 164,
  privateModuleFragment = 165,
  ptrOpList = 166,
  qualifier = 167,
  qualifierLoc = 168,
  questionLoc = 169,
  rangeDeclaration = 170,
  rangeInitializer = 171,
  rbraceLoc = 172,
  rbracket2Loc = 173,
  rbracketLoc = 174,
  refLoc = 175,
  refOp = 176,
  refQualifierLoc = 177,
  registerLoc = 178,
  requirementList = 179,
  requiresClause = 180,
  requiresLoc = 181,
  restrictLoc = 182,
  returnLoc = 183,
  rightExpression = 184,
  rparen2Loc = 185,
  rparenLoc = 186,
  scopeLoc = 187,
  secondColonLoc = 188,
  semicolonLoc = 189,
  sizeExpression = 190,
  sizeofLoc = 191,
  specifier = 192,
  specifierLoc = 193,
  splicer = 194,
  starLoc = 195,
  statement = 196,
  statementList = 197,
  staticAssertLoc = 198,
  staticLoc = 199,
  stringLiteral = 200,
  stringliteralLoc = 201,
  switchLoc = 202,
  symbolicName = 203,
  symbolicNameLoc = 204,
  templateArgumentList = 205,
  templateId = 206,
  templateLoc = 207,
  templateParameterList = 208,
  templateRequiresClause = 209,
  thisLoc = 210,
  threadLoc = 211,
  threadLocalLoc = 212,
  throwLoc = 213,
  tildeLoc = 214,
  trailingReturnType = 215,
  tryLoc = 216,
  typeConstraint = 217,
  typeId = 218,
  typeIdList = 219,
  typeQualifierList = 220,
  typeSpecifier = 221,
  typeSpecifierList = 222,
  typeTraitLoc = 223,
  typedefLoc = 224,
  typeidLoc = 225,
  typenameLoc = 226,
  underlyingTypeLoc = 227,
  unqualifiedId = 228,
  usingDeclaratorList = 229,
  usingLoc = 230,
  vaArgLoc = 231,
  virtualLoc = 232,
  virtualOrAccessLoc = 233,
  voidLoc = 234,
  volatileLoc = 235,
  whileLoc = 236,
  yieldLoc = 237,
}
