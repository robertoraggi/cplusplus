name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install unit tests requirements
        run: |
          pip install -r tests/unit_tests/requirements.txt

      - name: Build
        run: |
          cmake . \
            -Bbuild \
            -DCMAKE_BUILD_TYPE=Release

          cmake --build build

      - name: Test
        working-directory: build
        run: |
          ctest --verbose

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install unit tests requirements
        run: |
          pip install -r tests\unit_tests\requirements.txt

      - name: Build
        run: |
          cmake . -Bbuild

          cmake --build build --config Release

      - name: Test
        working-directory: build
        run: |
          ctest --verbose -C Release

  build-emscripten:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        working-directory: packages/cxx-frontend
        run: |
          npm ci
          npm run build
          npm pack

      - name: Test
        working-directory: packages/cxx-frontend/examples
        run: |
          node dump.mjs

  build-macos:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Install unit tests requirements
        run: |
          python3 -m venv .env
          . .env/bin/activate
          pip install -r tests/unit_tests/requirements.txt

      - name: Build
        run: |
          . .env/bin/activate

          cmake . \
            -Bbuild \
            -DCMAKE_BUILD_TYPE=MinSizeRel \
            -DLLVM_ROOT=$(brew --prefix llvm)

          cmake --build build

      - name: Test
        working-directory: build
        run: |
          ctest --verbose

  build-wasi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          bash -x scripts/build-wasi.sh

      - name: Install wasmtime
        run: |
          wget https://github.com/bytecodealliance/wasmtime/releases/download/v9.0.3/wasmtime-v9.0.3-x86_64-linux.tar.xz
          tar Jxvf wasmtime-v9.0.3-x86_64-linux.tar.xz -C ~/

      - name: Test
        run: |
          ~/wasmtime-v9.0.3-x86_64-linux/wasmtime \
            --mapdir=/::${{github.workspace}}/build.wasi/install \
            --mapdir tests::tests \
            ${{github.workspace}}/build.wasi/install/usr/bin/cxx.wasm -- -v tests/manual/source.cc

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cxx-wasi
          path: |
            build.wasi/install/
            !build.wasi/install/usr/lib/*.a
            !build.wasi/install/usr/lib/cmake
            !build.wasi/install/usr/lib/wasi-sysroot/lib
            !build.wasi/install/usr/lib/wasi-sysroot/share
            !build.wasi/install/usr/include
          retention-days: 1

  release-please:
    runs-on: ubuntu-latest
    if: github.repository == 'robertoraggi/cplusplus' && github.ref == 'refs/heads/main'
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          release-type: simple
          package-name: cplusplus
