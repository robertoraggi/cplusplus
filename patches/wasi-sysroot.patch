diff --git a/include/c++/v1/__compare/ordering.h b/include/c++/v1/__compare/ordering.h
index ff148ab..1f58435 100644
--- a/include/c++/v1/__compare/ordering.h
+++ b/include/c++/v1/__compare/ordering.h
@@ -43,7 +43,7 @@ struct _CmpUnspecifiedParam {
   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEVAL
   _CmpUnspecifiedParam(int _CmpUnspecifiedParam::*) noexcept {}
 
-  template<class _Tp, class = enable_if_t<!__one_of_v<_Tp, int, partial_ordering, weak_ordering, strong_ordering>>>
+  template<class _Tp, class = enable_if<!__one_of_v<_Tp, int, partial_ordering, weak_ordering, strong_ordering>>::type>
   _CmpUnspecifiedParam(_Tp) = delete;
 };
 
diff --git a/include/c++/v1/__random/independent_bits_engine.h b/include/c++/v1/__random/independent_bits_engine.h
index 151492a..e54621c 100644
--- a/include/c++/v1/__random/independent_bits_engine.h
+++ b/include/c++/v1/__random/independent_bits_engine.h
@@ -168,7 +168,7 @@ private:
         static
         typename enable_if
         <
-            __count < _Dt,
+            (__count < _Dt),
             result_type
         >::type
         __lshift(result_type __x) {return __x << __count;}
diff --git a/include/c++/v1/__random/mersenne_twister_engine.h b/include/c++/v1/__random/mersenne_twister_engine.h
index 3a58e31..b7b261c 100644
--- a/include/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/c++/v1/__random/mersenne_twister_engine.h
@@ -208,7 +208,7 @@ private:
         static
         typename enable_if
         <
-            __count < __w,
+            (__count < __w),
             result_type
         >::type
         __lshift(result_type __x) {return (__x << __count) & _Max;}
@@ -228,7 +228,7 @@ private:
         static
         typename enable_if
         <
-            __count < _Dt,
+            (__count < _Dt),
             result_type
         >::type
         __rshift(result_type __x) {return __x >> __count;}
diff --git a/include/c++/v1/bitset b/include/c++/v1/bitset
index c260f9f..7a34867 100644
--- a/include/c++/v1/bitset
+++ b/include/c++/v1/bitset
@@ -198,9 +198,9 @@ protected:
 
     _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX23 void flip() _NOEXCEPT;
     _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_SINCE_CXX23 unsigned long to_ulong() const
-        {return to_ulong(integral_constant<bool, _Size < sizeof(unsigned long) * CHAR_BIT>());}
+        {return to_ulong(integral_constant<bool, (_Size < sizeof(unsigned long) * CHAR_BIT)>());}
     _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_SINCE_CXX23 unsigned long long to_ullong() const
-        {return to_ullong(integral_constant<bool, _Size < sizeof(unsigned long long) * CHAR_BIT>());}
+        {return to_ullong(integral_constant<bool, (_Size < sizeof(unsigned long long) * CHAR_BIT)>());}
 
     _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX23 bool all() const _NOEXCEPT;
     _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX23 bool any() const _NOEXCEPT;
