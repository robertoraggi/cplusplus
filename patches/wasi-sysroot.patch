diff --git a/include/wasm32-wasi-threads/c++/v1/__random/independent_bits_engine.h b/include/wasm32-wasi-threads/c++/v1/__random/independent_bits_engine.h
index 0f4a7b8..4b19e62 100644
--- a/include/wasm32-wasi-threads/c++/v1/__random/independent_bits_engine.h
+++ b/include/wasm32-wasi-threads/c++/v1/__random/independent_bits_engine.h
@@ -135,7 +135,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI result_type __eval(true_type);
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return __x << __count;
   }
 
diff --git a/include/wasm32-wasi-threads/c++/v1/__random/mersenne_twister_engine.h b/include/wasm32-wasi-threads/c++/v1/__random/mersenne_twister_engine.h
index 65280d7..945f700 100644
--- a/include/wasm32-wasi-threads/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/wasm32-wasi-threads/c++/v1/__random/mersenne_twister_engine.h
@@ -289,7 +289,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI void __seed(_Sseq& __q, integral_constant<unsigned, 2>);
 
   template <size_t __count,
-            __enable_if_t<__count< __w, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< __w), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return (__x << __count) & _Max;
   }
 
@@ -299,7 +299,7 @@ private:
   }
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
     return __x >> __count;
   }
 
diff --git a/include/wasm32-wasi/c++/v1/__random/independent_bits_engine.h b/include/wasm32-wasi/c++/v1/__random/independent_bits_engine.h
index 0f4a7b8..4b19e62 100644
--- a/include/wasm32-wasi/c++/v1/__random/independent_bits_engine.h
+++ b/include/wasm32-wasi/c++/v1/__random/independent_bits_engine.h
@@ -135,7 +135,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI result_type __eval(true_type);
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return __x << __count;
   }
 
diff --git a/include/wasm32-wasi/c++/v1/__random/mersenne_twister_engine.h b/include/wasm32-wasi/c++/v1/__random/mersenne_twister_engine.h
index 65280d7..945f700 100644
--- a/include/wasm32-wasi/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/wasm32-wasi/c++/v1/__random/mersenne_twister_engine.h
@@ -289,7 +289,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI void __seed(_Sseq& __q, integral_constant<unsigned, 2>);
 
   template <size_t __count,
-            __enable_if_t<__count< __w, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< __w), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return (__x << __count) & _Max;
   }
 
@@ -299,7 +299,7 @@ private:
   }
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
     return __x >> __count;
   }
 
diff --git a/include/wasm32-wasip1-threads/c++/v1/__random/independent_bits_engine.h b/include/wasm32-wasip1-threads/c++/v1/__random/independent_bits_engine.h
index 0f4a7b8..4b19e62 100644
--- a/include/wasm32-wasip1-threads/c++/v1/__random/independent_bits_engine.h
+++ b/include/wasm32-wasip1-threads/c++/v1/__random/independent_bits_engine.h
@@ -135,7 +135,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI result_type __eval(true_type);
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return __x << __count;
   }
 
diff --git a/include/wasm32-wasip1-threads/c++/v1/__random/mersenne_twister_engine.h b/include/wasm32-wasip1-threads/c++/v1/__random/mersenne_twister_engine.h
index 65280d7..945f700 100644
--- a/include/wasm32-wasip1-threads/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/wasm32-wasip1-threads/c++/v1/__random/mersenne_twister_engine.h
@@ -289,7 +289,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI void __seed(_Sseq& __q, integral_constant<unsigned, 2>);
 
   template <size_t __count,
-            __enable_if_t<__count< __w, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< __w), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return (__x << __count) & _Max;
   }
 
@@ -299,7 +299,7 @@ private:
   }
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
     return __x >> __count;
   }
 
diff --git a/include/wasm32-wasip1/c++/v1/__random/independent_bits_engine.h b/include/wasm32-wasip1/c++/v1/__random/independent_bits_engine.h
index 0f4a7b8..4b19e62 100644
--- a/include/wasm32-wasip1/c++/v1/__random/independent_bits_engine.h
+++ b/include/wasm32-wasip1/c++/v1/__random/independent_bits_engine.h
@@ -135,7 +135,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI result_type __eval(true_type);
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return __x << __count;
   }
 
diff --git a/include/wasm32-wasip1/c++/v1/__random/mersenne_twister_engine.h b/include/wasm32-wasip1/c++/v1/__random/mersenne_twister_engine.h
index 65280d7..945f700 100644
--- a/include/wasm32-wasip1/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/wasm32-wasip1/c++/v1/__random/mersenne_twister_engine.h
@@ -289,7 +289,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI void __seed(_Sseq& __q, integral_constant<unsigned, 2>);
 
   template <size_t __count,
-            __enable_if_t<__count< __w, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< __w), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return (__x << __count) & _Max;
   }
 
@@ -299,7 +299,7 @@ private:
   }
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
     return __x >> __count;
   }
 
diff --git a/include/wasm32-wasip2/c++/v1/__random/independent_bits_engine.h b/include/wasm32-wasip2/c++/v1/__random/independent_bits_engine.h
index 0f4a7b8..4b19e62 100644
--- a/include/wasm32-wasip2/c++/v1/__random/independent_bits_engine.h
+++ b/include/wasm32-wasip2/c++/v1/__random/independent_bits_engine.h
@@ -135,7 +135,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI result_type __eval(true_type);
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return __x << __count;
   }
 
diff --git a/include/wasm32-wasip2/c++/v1/__random/mersenne_twister_engine.h b/include/wasm32-wasip2/c++/v1/__random/mersenne_twister_engine.h
index 65280d7..d6db3f0 100644
--- a/include/wasm32-wasip2/c++/v1/__random/mersenne_twister_engine.h
+++ b/include/wasm32-wasip2/c++/v1/__random/mersenne_twister_engine.h
@@ -289,7 +289,7 @@ private:
   _LIBCPP_HIDE_FROM_ABI void __seed(_Sseq& __q, integral_constant<unsigned, 2>);
 
   template <size_t __count,
-            __enable_if_t<__count< __w, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
+            __enable_if_t<(__count< __w), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __lshift(result_type __x) {
     return (__x << __count) & _Max;
   }
 
@@ -299,7 +299,7 @@ private:
   }
 
   template <size_t __count,
-            __enable_if_t<__count< _Dt, int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
+            __enable_if_t<)__count< _Dt), int> = 0> _LIBCPP_HIDE_FROM_ABI static result_type __rshift(result_type __x) {
     return __x >> __count;
   }
 
